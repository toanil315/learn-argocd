apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    workload.user.cattle.io/workloadselector: apps.deployment-ecommerce-be-ecommerce-be-deployment
  name: ecommerce-be-deployment
  namespace: ecommerce
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-ecommerce-be-ecommerce-be-deployment
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-ecommerce-be-ecommerce-be-deployment
      namespace: ecommerce
    spec:
      affinity: {}
      containers:
        - image: ecommerce-backend:v2
          imagePullPolicy: Never
          name: ecommerce-be
          ports:
            - containerPort: 8080
              name: tcp
              protocol: TCP
          volumeMounts:
            - name: application-properties-config-map-volume
              mountPath: /run/src/main/resources/application.properties
              subPath: application-properties
          envFrom:
            - secretRef:
                name: ecommerce-be-database-connection
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: "1"
              memory: "1024Mi"
      volumes:
        - name: application-properties-config-map-volume
          configMap:
            name: ecommerce-be-config-map

---
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-be-cluster-ip
  namespace: ecommerce
spec:
  ports:
    - name: tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    workload.user.cattle.io/workloadselector: apps.deployment-ecommerce-be-ecommerce-be-deployment
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-be-ingress
  namespace: ecommerce
spec:
  ingressClassName: nginx
  rules:
    - host: localhost
      http:
        paths:
          - pathType: Prefix
            path: /be
            backend:
              service:
                name: ecommerce-be-cluster-ip
                port:
                  number: 8080

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-be-config-map
  namespace: ecommerce
data:
  application.properties: |
    spring.datasource.url=jdbc:mysql://${MARIADB_HOST}:${MARIADB_PORT}/${MARIADB_DB}
    spring.datasource.username=${MARIADB_USERNAME}
    spring.datasource.password=${MARIADB_PASSWORD}
    spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
    spring.datasource.sql-script-encoding=UTF-8
    spring.jpa.properties.hibernate.globally_quoted_i/dentifiers=true
    spring.jpa.hibernate.ddl-auto=none
    spring.jpa.show-sql=true
    spring.jpa.properties.hibernate.format_sql=true

    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

    spring.data.rest.base-path=/be/api

    allowed.origins=http://localhost:8080

    spring.data.rest.detection-strategy=ANNOTATED

    okta.oauth2.client-id=0oab0lzwjoN1Rjsar5d7

    okta.oauth2.issuer=https://dev-82108115.okta.com/oauth2/default

---
apiVersion: v1
kind: Secret
metadata:
  name: ecommerce-be-database-connection
  namespace: ecommerce
type: Opaque
stringData:
  MARIADB_HOST: "172.21.0.6"
  MARIADB_DB: "full-stack-ecommerce"
  MARIADB_PORT: "3306"
  MARIADB_USERNAME: "ecommerceapp"
  MARIADB_PASSWORD: "StrongPa55WorD"
